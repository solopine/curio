// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/filecoin-project/curio/tasks/seal (interfaces: AllocAPI)

// Package mockSeal is a generated GoMock package.
package mockSeal

import (
	context "context"
	reflect "reflect"

	address "github.com/filecoin-project/go-address"
	bitfield "github.com/filecoin-project/go-bitfield"
	types "github.com/filecoin-project/lotus/chain/types"
	gomock "github.com/golang/mock/gomock"
)

// MockAllocAPI is a mock of AllocAPI interface.
type MockAllocAPI struct {
	ctrl     *gomock.Controller
	recorder *MockAllocAPIMockRecorder
}

// MockAllocAPIMockRecorder is the mock recorder for MockAllocAPI.
type MockAllocAPIMockRecorder struct {
	mock *MockAllocAPI
}

// NewMockAllocAPI creates a new mock instance.
func NewMockAllocAPI(ctrl *gomock.Controller) *MockAllocAPI {
	mock := &MockAllocAPI{ctrl: ctrl}
	mock.recorder = &MockAllocAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAllocAPI) EXPECT() *MockAllocAPIMockRecorder {
	return m.recorder
}

// StateMinerAllocated mocks base method.
func (m *MockAllocAPI) StateMinerAllocated(arg0 context.Context, arg1 address.Address, arg2 types.TipSetKey) (*bitfield.BitField, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StateMinerAllocated", arg0, arg1, arg2)
	ret0, _ := ret[0].(*bitfield.BitField)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StateMinerAllocated indicates an expected call of StateMinerAllocated.
func (mr *MockAllocAPIMockRecorder) StateMinerAllocated(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StateMinerAllocated", reflect.TypeOf((*MockAllocAPI)(nil).StateMinerAllocated), arg0, arg1, arg2)
}
