// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/filecoin-project/curio/tasks/seal (interfaces: SDRAPI)

// Package mockSeal is a generated GoMock package.
package mockSeal

import (
	context "context"
	reflect "reflect"

	abi "github.com/filecoin-project/go-state-types/abi"
	crypto "github.com/filecoin-project/go-state-types/crypto"
	types "github.com/filecoin-project/lotus/chain/types"
	gomock "github.com/golang/mock/gomock"
)

// MockSDRAPI is a mock of SDRAPI interface.
type MockSDRAPI struct {
	ctrl     *gomock.Controller
	recorder *MockSDRAPIMockRecorder
}

// MockSDRAPIMockRecorder is the mock recorder for MockSDRAPI.
type MockSDRAPIMockRecorder struct {
	mock *MockSDRAPI
}

// NewMockSDRAPI creates a new mock instance.
func NewMockSDRAPI(ctrl *gomock.Controller) *MockSDRAPI {
	mock := &MockSDRAPI{ctrl: ctrl}
	mock.recorder = &MockSDRAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSDRAPI) EXPECT() *MockSDRAPIMockRecorder {
	return m.recorder
}

// ChainHead mocks base method.
func (m *MockSDRAPI) ChainHead(arg0 context.Context) (*types.TipSet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChainHead", arg0)
	ret0, _ := ret[0].(*types.TipSet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ChainHead indicates an expected call of ChainHead.
func (mr *MockSDRAPIMockRecorder) ChainHead(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChainHead", reflect.TypeOf((*MockSDRAPI)(nil).ChainHead), arg0)
}

// StateGetRandomnessFromTickets mocks base method.
func (m *MockSDRAPI) StateGetRandomnessFromTickets(arg0 context.Context, arg1 crypto.DomainSeparationTag, arg2 abi.ChainEpoch, arg3 []byte, arg4 types.TipSetKey) (abi.Randomness, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StateGetRandomnessFromTickets", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(abi.Randomness)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StateGetRandomnessFromTickets indicates an expected call of StateGetRandomnessFromTickets.
func (mr *MockSDRAPIMockRecorder) StateGetRandomnessFromTickets(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StateGetRandomnessFromTickets", reflect.TypeOf((*MockSDRAPI)(nil).StateGetRandomnessFromTickets), arg0, arg1, arg2, arg3, arg4)
}
